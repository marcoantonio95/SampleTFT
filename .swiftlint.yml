# Regras desabilitadas (somente se justificadas)
disabled_rules:
  - force_cast           # Evitar casts forçados.
  - force_try            # Evitar o uso de try! que ignora erros.
  - trailing_newline     # Permitir ausência de nova linha no final do arquivo.
  - todo                 # Evitar deixar comentários TODO em produção.
  - cyclomatic_complexity # Flexibilidade para métodos complexos em casos específicos.
  - line_length          # Substituído por warnings customizados.

# Regras habilitadas e customizadas
opt_in_rules:
  - empty_count          # Usar .isEmpty em vez de .count == 0.
  - explicit_enum_raw_value # Exigir valores explícitos para enums com raw values.
  - explicit_init        # Exigir inicializadores explícitos.
  - closure_end_indentation # Manter consistência na indentação de closures.
  - prefer_self_type     # Usar `Self` para referenciar o tipo da instância atual.
  - prefer_nimble        # Para projetos usando testes com Nimble.
  - discouraged_object_literal # Evitar literais para imagens, cores, etc.
  - redundant_void_return # Evitar retornos redundantes do tipo Void.
  - yoda_conditions      # Preferir condições no formato normal (ex: `x == 10`).

# Limites de código e formatação
line_length:
  warning: 100           # Avisar quando uma linha ultrapassar 100 caracteres.
  error: 120             # Forçar correção se ultrapassar 120 caracteres.

file_length:
  warning: 400           # Avisar quando o arquivo ultrapassar 400 linhas.
  error: 800             # Arquivo com mais de 800 linhas será considerado erro.

type_body_length:
  warning: 300           # Limite de linhas por tipo.
  error: 500

function_body_length:
  warning: 30            # Avisar quando uma função ultrapassar 30 linhas.
  error: 50              # Forçar correção acima de 50 linhas.

identifier_name:
  min_length: 3          # Evitar identificadores curtos (ex: `x`, `y`).
  max_length: 50         # Evitar identificadores longos demais.
  excluded:
    - id                 # `id` pode ser usado como identificador curto.

# Indentação e espaçamento
indentation:
  type: space            # Usar espaços em vez de tabulação.
  width: 4               # Indentação de 4 espaços para melhorar legibilidade.

trailing_whitespace:
  ignores_empty_lines: false
  ignores_comments: false

vertical_whitespace:
  max_empty_lines: 1     # Apenas uma linha vazia permitida consecutivamente.

# Regras de boas práticas
force_unwrapping:
  severity: error        # Evitar uso de force unwraps (`!`).

implicitly_unwrapped_optional:
  severity: error        # Evitar opcionais implicitamente descompactados.

redundant_optional_initialization: true
redundant_string_enum_value: true # Evitar valores de enum redundantes em Strings.

# Segurança
duplicate_imports: true   # Evitar importações duplicadas.
unowned_variable_capture: true # Evitar capturas `unowned` que podem gerar crashes.
discarded_notification_center_observer: true # Garantir remoção de observers.

# Performance
unused_closure_parameter: true
private_over_fileprivate: true  # Usar `private` em vez de `fileprivate` quando possível.

# Testes
xctfail_message: true     # Sempre fornecer mensagens claras em falhas de testes.

# Configurações gerais
excluded:
  - .swiftlint.yml       # Ignorar o próprio arquivo de configuração.

custom_rules:
  force_unwrap:
    name: "Uso de Force Unwrap"
    regex: "!"
    message: "Evite usar `!`, pois pode causar crashes."
    severity: error
